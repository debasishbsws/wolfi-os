#nolint:valid-pipeline-git-checkout-tag
package:
  name: ruby3.2-aws-eventstream
  version: "1.4.0"
  epoch: 0
  description: Amazon Web Services event stream library. Decodes and encodes binary stream under `vnd.amazon.event-stream` content-type
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - git
      - ruby-${{vars.rubyMM}}
      - ruby-${{vars.rubyMM}}-dev

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 9a28c56e599f67d6e679011cce59d0dbd8cd6e36
      repository: https://github.com/aws/aws-sdk-ruby
      branch: version-3
      depth: -1

  - uses: ruby/build
    with:
      gem: ${{vars.gem}}
      dir: gems/${{vars.gem}}

  - uses: ruby/install
    with:
      gem: ${{vars.gem}}
      version: ${{package.version}}
      dir: gems/${{vars.gem}}

  - uses: ruby/clean

vars:
  gem: aws-eventstream
  latest-version-script: |
    #!/bin/bash
    set -e

    PROJECT=aws-eventstream
    echo "hello"

    if ! command -v git &> /dev/null; then
        exit 1
    fi
    REPO_URL="https://github.com/aws/aws-sdk-ruby.git"
    BRANCH="version-3"
    REPO_DIR="aws-sdk-ruby"
    OUTPUT=""

    # Ensure the repository directory is set
    if [ -d "$REPO_DIR" ]; then
        cd "$REPO_DIR"
        git pull origin "$BRANCH" 2>&1 || true
    else
        git clone --branch "$BRANCH" "$REPO_URL" "$REPO_DIR" 2>&1
        cd "$REPO_DIR"
    fi
      VERSION_FILE="./gems/$PROJECT/VERSION"
      if [ -f "$VERSION_FILE" ]; then
          version=$(cat "$VERSION_FILE")
          OUTPUT="latest-version:$version"
      else
          exit 1
    fi
    # get the latest commit hash
    latest_commit=$(git rev-parse HEAD)
    OUTPUT="$OUTPUT\nexpected-commit:$latest_commit"
    cd ..
    echo "----OUTPUT----"
    echo -e "$OUTPUT"

test:
  environment:
    contents:
      packages:
        - ruby-${{vars.rubyMM}}
  pipeline:
    - runs: |
        ruby <<-EOF
        require 'aws-eventstream'
        require 'test/unit'
        require 'stringio'
        include Test::Unit::Assertions

        # Create and test a simple message
        message = Aws::EventStream::Message.new(
          headers: {'event-type' => Aws::EventStream::HeaderValue.new(value: 'test', type: 'string')},
          payload: StringIO.new("test_data")
        )

        encoded = Aws::EventStream::Encoder.new.encode(message)

        messages = []
        decoder = Aws::EventStream::Decoder.new
        decoder.decode(StringIO.new(encoded)) do |decoded_msg|
          messages << decoded_msg
        end

        assert_equal "test_data", messages.first.payload.read
        puts "All tests passed!"
        EOF

update:
  enabled: false
  manual: true # the library we fetch uses a different version then the package version
  release-monitor:
    identifier: 174496

var-transforms:
  - from: ${{package.name}}
    match: ^ruby(\d\.\d+)-.*
    replace: $1
    to: rubyMM
