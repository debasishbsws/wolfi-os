package:
  name: cloudnative-pg
  version: 1.23.2
  epoch: 5
  description: CloudNativePG is a comprehensive platform designed to seamlessly manage PostgreSQL databases
  copyright:
    - license: Apache-2.0

# Replace aarch64/x86_64 with arm64/amd64
var-transforms:
  - from: ${{build.arch}}
    match: 'aarch64'
    replace: 'arm64'
    to: mangled-arch
  - from: ${{build.arch}}
    match: 'x86_64'
    replace: 'amd64'
    to: mangled-arch

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/cloudnative-pg/cloudnative-pg
      tag: v${{package.version}}
      expected-commit: 4bef841286ef84c4b435a6204a7ee632e1d4fb57

  - name: Generate controller code
    runs: |
      make generate fmt vet

  - uses: go/build
    with:
      modroot: ./cmd/manager
      output: manager_${{vars.mangled-arch}}
      prefix: /
      ldflags: |
        -X github.com/cloudnative-pg/cloudnative-pg/pkg/versions.buildVersion=${{package.version}}
        -X github.com/cloudnative-pg/cloudnative-pg/pkg/versions.buildCommit=$(git rev-parse --short=8 HEAD)
        -X github.com/cloudnative-pg/cloudnative-pg/pkg/versions.buildDate=$(date -u -d "@${SOURCE_DATE_EPOCH:-$(date +%s)}" "+%Y-%m-%dT%H:%M:%SZ")
      packages: .

  - runs: ln -sf /bin/manager_${{vars.mangled-arch}} ${{targets.contextdir}}/manager

subpackages:
  - name: ${{package.name}}-plugins
    pipeline:
      - uses: go/build
        with:
          packages: ./cmd/kubectl-cnpg
          output: plugins
          ldflags: |
            -X github.com/cloudnative-pg/cloudnative-pg/pkg/versions.buildVersion=${{package.version}}
            -X github.com/cloudnative-pg/cloudnative-pg/pkg/versions.buildCommit=$(git rev-parse --short=8 HEAD)
            -X github.com/cloudnative-pg/cloudnative-pg/pkg/versions.buildDate=$(date -u -d "@${SOURCE_DATE_EPOCH:-$(date +%s)}" "+%Y-%m-%dT%H:%M:%SZ")

update:
  enabled: true
  github:
    identifier: cloudnative-pg/cloudnative-pg
    strip-prefix: v
    use-tag: true

test:
  pipeline:
    # - Testing observability requires helm installation
    # - Testing backup and Recovery requires using BarmanObjectStorage:
    - name: "Verify Installation"
      runs: |
        cd /
        manager_${{vars.mangled-arch}} version | grep "${{package.version}}"
        /manager version | grep "${{package.version}}"
        /manager debug show-architectures | grep ${{vars.mangled-arch}}
